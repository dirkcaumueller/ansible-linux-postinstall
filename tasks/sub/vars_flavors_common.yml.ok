---
# linux-postinstall vars: vars_flavors_common

# Fetch my_release_file from the remote host and store the file in
# lp_flavors_dir. Read release_attr from the fetched file and include
# vars that correspond the flavor, release and HW.

# my_release_file
- name: 'sub: vars_flavors_common: Set my_release_file'
  set_fact:
    my_release_file: '{{ outer_item.value.release_file }}'
- name: 'sub: vars_flavors_common: Debug my_release_file'
  when: lp_debug|bool
  debug:
    var: my_release_file

# my_flavor
- name: 'sub: vars_flavors_common: Set my_flavor'
  set_fact:
    my_flavor: '{{ outer_item.key }}'
- name: 'sub: vars_flavors_common: Debug my_flavor'
  when: lp_debug|bool
  debug:
    var: my_flavor

# my_release_file_fetch
- name: 'sub: vars_flavors_common: Set my_release_file_fetch'
  set_fact:
    my_release_file_fetch: "{{ lp_flavors_dir ~ '/' ~
                               inventory_hostname ~ '-' ~
                               my_flavor }}"
- name: 'sub: vars_flavors_common: Fetch {{ my_release_file }} to
                                         {{ my_release_file_fetch }}'
  fetch:
    flat: true
    src: '{{ my_release_file }}'
    dest: '{{ my_release_file_fetch }}'

# my_release_keys
- name: 'sub: vars_flavors_common: Clear my_release_keys'
  set_fact:
    my_release_keys: []
- name: 'sub: vars_flavors_common: Set my_release_keys'
  set_fact:
    my_release_keys: "{{ my_release_keys|
                         default([]) + [item.split('=').0|trim] }}"
  loop: "{{ lookup('file', my_release_file_fetch).splitlines() }}"
  when: item is match('^(\s*[a-zA-Z0-9_]+\s*)=(.*)$')
- name: 'sub: vars_flavors_common: Debug my_release_keys'
  when: lp_debug|bool
  debug:
    var: my_release_keys

# my_release_dict
- name: 'sub: vars_flavors_common: Clear my_release_dict'
  set_fact:
    my_release_dict: {}
- name: 'sub: vars_flavors_common: Set my_release_dict attributes'
  set_fact:
    my_release_dict: "{{ my_release_dict|
                         combine({item: lookup('ini', item ~
                                                      ' type=properties file=' ~
                                                      my_release_file_fetch)}) }}"
  loop: '{{ my_release_keys }}'
- name: 'sub: vars_flavors_common: Debug my_release_dict'
  when: lp_debug|bool
  debug:
    var: my_release_dict

# my_release
- name: 'sub: vars_flavors_common: Add flavor to my_release'
  set_fact:
    my_release: '{{ my_release|
                    default({})|
                    combine({my_flavor: my_release_dict}) }}'
- name: 'sub: vars_flavors_common: Debug my_release'
  when: lp_debug|bool
  debug:
    var: my_release

# my_labels
- name: 'sub: vars_flavors_common: Set my_labels'
  set_fact:
    my_labels: "{{ lp_flavors[my_flavor].file_labels|
                   map('extract', my_release[my_flavor])|
                   list }}"
- name: 'sub: vars_flavors_common: Debug my_labels'
  when: lp_debug|bool
  debug:
    var: my_labels

# Include default vars for flavor
- name: 'sub: vars_flavors_common: Include default vars for flavor
              [{{ my_labels.1 }},
               {{ my_labels.0 }},
               {{ my_flavor }}]'
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - '{{ my_flavor }}_{{ my_labels.0 }}_{{ my_labels.1 }}.yml'
        - '{{ my_flavor }}_{{ my_labels.0 }}.yml'
        - '{{ my_flavor }}.yml'
        - default.yml
        - defaults.yml
      paths:
        - '{{ role_path }}/vars/flavors'
# [TODO]
#     skip: "{{ lp_vars_distro_firstfound_skip|bool }}"
# skip doesn't work with first_found lookup #43833
# https://github.com/ansible/ansible/issues/43833
# workaround: Create empty defaults.yml

# EOF
...
