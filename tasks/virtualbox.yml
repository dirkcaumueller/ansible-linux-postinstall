---
# linux-postinstall virtualbox

- name: "virtualbox: Debug"
  vars:
    msg: |
      ansible_lsb.description [{{ ansible_lsb.codename }}]
      lp_virtualbox [{{ lp_virtualbox }}]
      lp_virtualbox_ignore_errors [{{ lp_virtualbox_ignore_errors }}]
      lp_virtualbox_keys [{{ lp_virtualbox_keys }}]
      lp_virtualbox_repos [{{ lp_virtualbox_repos }}]
      lp_virtualbox_install
      {{ lp_virtualbox_install|to_nice_yaml }}
      lp_virtualbox_services
      {{ lp_virtualbox_services|to_nice_yaml }}
  debug:
    msg: "{{ msg.split('\n') }}"
  when: lp_debug|bool

# TODO: assert lp_virtualbox_modules are loaded
#       when: lp_virtualbox|bool

- name: "virtualbox: Add signing key of VirtualBox"
  apt_key:
    url: "{{ item }}"
    state: present
  loop: "{{ lp_virtualbox_keys }}"
  register: result
  retries: "{{ lp_install_retries }}"
  until: result is succeeded
  delay: "{{ lp_install_delay }}"
  ignore_errors: "{{ lp_virtualbox_ignore_errors }}"
  tags: lp_virtualbox_keys

- name: "virtualbox: Add repository of VirtualBox"
  apt_repository:
    repo: "{{ item }}"
    state: present
  loop: "{{ lp_virtualbox_repos }}"
  ignore_errors: "{{ lp_virtualbox_ignore_errors }}"
  tags: lp_virtualbox_repos

- name: "virtualbox: Install VirtualBox packages"
  include_tasks: fn/install-package.yml
  loop: "{{ lp_virtualbox_packages }}"
  ignore_errors: "{{ lp_virtualbox_ignore_errors }}"
  tags: lp_virtualbox_pkg

- name: "virtualbox: Enable and start services"
  service:
    name: "{{ item }}"
    state: started
    enabled: true
  loop: "{{ lp_virtualbox_services }}"
  when: lp_virtualbox_enable|bool
  tags: lp_virtualbox_services

- name: "virtualbox: Disable and stop services"
  service:
    name: "{{ item }}"
    state: stopped
    enabled: false
  loop: "{{ lp_virtualbox_services }}"
  when: not lp_virtualbox_enable|bool
  tags: lp_virtualbox_services

# EOF
...
