---
# linux-postinstall gpg

- name: "gpg: Debug"
  vars:
    msg: |
      lp_gpg_install [{{ lp_gpg_install }}]
      lp_gpg_packages
      {{ lp_gpg_packages|to_nice_yaml }}
      lp_gpg_packages_extra
      {{ lp_gpg_packages_extra|to_nice_yaml }}

      lp_gpg_conf_default
      {{ lp_gpg_conf_default|to_yaml }}
      lp_gpg_conf
      {{ lp_gpg_conf|to_yaml }}

      lp_gpg_agent_conf_default
      {{ lp_gpg_agent_conf_default|to_yaml }}
      lp_gpg_agent_conf
      {{ lp_gpg_agent_conf|to_yaml }}
  debug:
    msg: "{{ msg.split('\n') }}"
  when: lp_gpg_debug|bool
  tags: lp_gpg_debug

- name: "gpg: Install packages"
  include_tasks: fn/install-package.yml
  loop:
    - "{{ lp_gpg_packages }}"
    - "{{ lp_gpg_packages_extra }}"
  when: lp_gpg_install|bool
  tags: lp_gpg_packages

- name: "gpg: Configure ~/.gnupg/gpg.conf"
  template:
    src: gpg.conf.j2
    dest: "/home/{{ item.owner }}/.gnupg/gpg.conf"
    owner: "{{ item.owner }}"
    group: "{{ item.owner }}"
    mode: "0600"
    backup: "{{ lp_backup_conf }}"
  loop: "{{ lp_gpg_conf }}"
  loop_control:
    label: "{{ item.owner }}"
  tags: lp_gpg_conf

- name: "gpg: Configure ~/.gnupg/gpg-agent.conf"
  template:
    src: gpg-agent.conf.j2
    dest: "/home/{{ item.owner }}/.gnupg/gpg-agent.conf"
    owner: "{{ item.owner }}"
    group: "{{ item.owner }}"
    mode: "0600"
    backup: "{{ lp_backup_conf }}"
  loop: "{{ lp_gpg_agent_conf }}"
  loop_control:
    label: "{{ item.owner }}"
  tags: lp_gpg_conf

# TODO: import keys

# EOF
...
